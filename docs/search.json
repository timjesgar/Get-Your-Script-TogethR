[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Get Your Script TogethR!",
    "section": "",
    "text": "Sammlung an Tutorials und How-Tos um die Irrungen und Wirrungen der Aufbereitung und Auswertung psych. wissenschaftlicher Daten zu meistern."
  },
  {
    "objectID": "how-tos/how-tos.html",
    "href": "how-tos/how-tos.html",
    "title": "How-Tos",
    "section": "",
    "text": "Manche Programmierprobleme tauchen immer wieder in der Aufbereitung und Auswertung von wissenschaftlichen Daten auf, benötigen aber teilweise so spezifisches Wissen, dass man sich jedes Mal aus neue dazu einlesen muss. Damit die nächste Pattern Extraction aus Strings oder parallele Berechnung von mehreren Modellen smoother verläuft, gibt es hier eine Sammlung aus nützlichen How-Tos zu Programmierproblemen denen wir immer wieder begegnen.",
    "crumbs": [
      "HOW-TOS",
      "How-Tos"
    ]
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site"
  },
  {
    "objectID": "how-tos/how-to_functional-programming.html",
    "href": "how-tos/how-to_functional-programming.html",
    "title": "How-To: Functional Programming",
    "section": "",
    "text": "Incentive\n\n\ntl;dr\n\nyour_list |&gt;\n  set_names() |&gt;\n  map(\\(list_entry) {\n    # your code\n  })\n\n\n\nIn detail",
    "crumbs": [
      "HOW-TOS",
      "How-To: Functional Programming"
    ]
  },
  {
    "objectID": "reproducible-projects/reproducible_projects.html",
    "href": "reproducible-projects/reproducible_projects.html",
    "title": "Reproduzierbare Analyseprojekte mit R",
    "section": "",
    "text": "Ein Ziel von Open Science ist die Reproduzierbarkeit von Studienergebnissen auf Basis der Originaldaten. Um dies zu gewährleisten, ist es hilfreich, neben den Originaldaten auch die genutzten Code-Skripte im “Plug-and-Play”-Format aufzubereiten und zu veröffentlichen. “Plug-and-Play” bezieht sich hierbei darauf, dass eine andere Person durch das einfache durchlaufen lassen der Skripte zu dem selben Ergebnis kommt, die auch berichtet wurden.\nWas zunächst simpel klingt, ist in der Anwendung meist komplexer als man denkt: Skripte entwickeln sich über den Lauf eines Projektes organisch zu Ungetümen, bei denen selbst die verfassende Person nicht mehr durchblickt. Wichtige Dateipfade werden hard-coded, sodass das Skript nicht mehr funktioniert, wenn es verschoben wird. Oder, ein R-Paket wird auf eine Art aktualisiert, dass der gestern noch funktionierende Code nur noch Fehler wirft. Auch wenn nicht jede Eventualität vorhergesehen werden kann, so kann man doch Schritte gehen, um solche Probleme möglichst minimal zu halten. Einige diese Schritte, von vorausschauendem Kommentieren, über adaptive relative Pfaden, zu reproduzierbaren R-Umgebungen, sollen hier vorgestellt werden um einen Einblick zu geben, wie man mit überschaubarem Aufwand die eigenen Analysen reproduzierbarer machen kann."
  },
  {
    "objectID": "reproducible-projects/reproducible_projects.html#struktur-eines-analyseprojekts",
    "href": "reproducible-projects/reproducible_projects.html#struktur-eines-analyseprojekts",
    "title": "Reproduzierbare Analyseprojekte mit R",
    "section": "Struktur eines Analyseprojekts",
    "text": "Struktur eines Analyseprojekts\nZuallererst ist es hilfreich, für jedes Analyseprojekt einen dedizierten Ordner zu haben, anstatt einen Riesenordner mit diversen Skripten von verschiedenen Projekten zu kultivieren. Dieses partialisierte Vorgehen hat einige Vorteile:\n\nÜbersichtlichkeit: Du suchst nach einem Projekt, welches du vor Jahren abgeschlossen hast? Ein Ordner 202X_projekt-name ist schnell gefunden.\nErwartbarkeit: Idealerweise ist der Aufbau jedes Projekts, also welche Unterordner es gibt und wo relevante Dateien liegen, identisch. Das macht es einfach, sich in Projekte reinzudenken, die man lange nicht mehr geöffnet hat.\nZuordbarkeit relevanter Dateien: Du nennst für jede Analyse den Originaldatensatz gleich? Das kann schnell zum Problem werden, wenn du nicht mehr weißt, ob raw_data1.csv oder raw_data2.csv der richtige Datensatz für dein aktuelles Projekt ist. Ein Projektordner löst das Problem, da nur die zugehörigen Dateien in den jeweiligen Ordnern gespeichert werden.\nPortabilität: Du willst deine Analysen mit jemand anderem teilen? Kein Problem! Teile einfach den gesamten Projektordner!\n\nDu siehst, so ein Analyseprojekt kann einiges leichter machen. Damit du vollumfänglich von diesen Vorteilen profitieren kannst, müssen wir allerdings beim Setup des Projekts einige Dinge beachten. Fangen wir erstmal mit der Ordnerstruktur selbst an:\n\nErstellen des Projektordners\nDas einfachste Vorgehen ist, einen Ordner manuell zu erstellen und mit einem deskriptiven Name zu versehen (z.B. 2025_projekt-projektname). Wenn du aber, wie wahrscheinlich die meisten, deine R-Analysen mittels einer IDE (Integrated Development Environment) wie RStudio oder Positron durchführst, ist es sinnvoll, das Projektsetup der jeweiligen IDE zu überlassen. Dadurch werden dir einige Setup-Schritte abgenommen und du kannst dir sicher sein, dass deine IDE deinen Projektordner auch als Projekt erkennt.\nHier also das Vorgehen für zwei der bekanntesten IDEs für das arbeiten mit R:\n\n\n\n\n\n\nProjekt-Setup mit RStudio\n\n\n\n\n\nTODO\n\n\n\n\n\n\n\n\n\nProjekt-Setup mit Positron\n\n\n\n\n\nTODO\n\n\n\n\n\nErstelle die Unterordner-Struktur\nTODO"
  },
  {
    "objectID": "tutorials/tutorial.html",
    "href": "tutorials/tutorial.html",
    "title": "Für EinsteigeR",
    "section": "",
    "text": "Die Abschlussarbeit steht an – und du hast sogar schon alle Daten gesammelt?\nGlückwunsch, du bist schon weiter als viele andere. Jetzt fehlt ja „nur noch“ die Auswertung. Klingt erstmal nach einem Klick in SPSS oder Excel – aber wer schon einmal versucht hat, echte Studiendaten auszuwerten, weiß: Der schwierigste Teil kommt oft vor der Statistik.\nDatenaufbereitung, R-Skripte, Formatprobleme, Datentypen und Co. – was nach einer wilden Mischung aus Zauberspruch und Fehlermeldung klingt, ist in Wirklichkeit gut machbar. Vorausgesetzt, man hat den richtigen Einstieg.\nGenau den findest du hier.\nIn dieser Tutorial-Reihe begleiten wir dich Schritt für Schritt durch die wichtigsten Grundlagen, um deine Daten in den Griff zu bekommen – mit R, einer kostenlosen Programmiersprache, die besonders in der Forschung mittlerweile Standard ist.\nWas dich erwartet:\n\nR Basics – Was ist R eigentlich? Wie funktioniert RStudio? Und warum ist ein Pfeil plötzlich ein Zuweisungsoperator?\nDaten aufräumen wie Marie Kondo – Von wildem Datenchaos zur sauberen Tabelle: Importieren, Filtern, Umkodieren, Zusammenführen.\nDer Weg zur Analyse – Sobald deine Daten bereit sind, wird der statistische Teil plötzlich viel einfacher. Wirklich.",
    "crumbs": [
      "Tutorials",
      "Für EinsteigeR"
    ]
  },
  {
    "objectID": "tutorials/fuer-einsteigr.html",
    "href": "tutorials/fuer-einsteigr.html",
    "title": "Für EinsteigR",
    "section": "",
    "text": "Die Abschlussarbeit steht an – und du hast sogar schon alle Daten gesammelt?\nGlückwunsch, du bist schon weiter als viele andere. Jetzt fehlt ja „nur noch“ die Auswertung. Klingt erstmal nach einem Klick in SPSS oder Excel – aber wer schon einmal versucht hat, echte Studiendaten auszuwerten, weiß: Der schwierigste Teil kommt oft vor der Statistik.\nDatenaufbereitung, R-Skripte, Formatprobleme, Datentypen und Co. – was nach einer wilden Mischung aus Zauberspruch und Fehlermeldung klingt, ist in Wirklichkeit gut machbar. Vorausgesetzt, man hat den richtigen Einstieg.\nGenau den findest du hier.\nIn dieser Tutorial-Reihe begleiten wir dich Schritt für Schritt durch die wichtigsten Grundlagen, um deine Daten in den Griff zu bekommen – mit R, einer kostenlosen Programmiersprache, die besonders in der Forschung mittlerweile Standard ist.\nWas dich erwartet:\n\nR Basics – Was ist R eigentlich? Wie funktioniert RStudio? Und warum ist ein Pfeil plötzlich ein Zuweisungsoperator?\nDaten aufräumen wie Marie Kondo – Von wildem Datenchaos zur sauberen Tabelle: Importieren, Filtern, Umkodieren, Zusammenführen.\nDer Weg zur Analyse – Sobald deine Daten bereit sind, wird der statistische Teil plötzlich viel einfacher. Wirklich.",
    "crumbs": [
      "TUTORIALS",
      "Für EinsteigR"
    ]
  },
  {
    "objectID": "tutorials/Rste-schritte.html",
    "href": "tutorials/Rste-schritte.html",
    "title": "Rste Schritte",
    "section": "",
    "text": "Für die Aufbereitung und Analyse deiner Daten empfehlen wir R – eine Programmiersprache die in der Wissenschaft weit verbreitet ist. Um den Umgang mit R zu vereinfachen, nutzen wir RStudio. Dabei handelt es sich um eine integrierte Entwicklungsumgebung (IDE), also sozusagen ein All-in-one-Programm für alle, die mit R arbeiten: Du kannst hier Code schreiben, ausführen, deine Daten anschauen und direkt schöne Plots erzeugen – ohne ständig zwischen Programmen zu wechseln.\n\n\n\n\n\n\nInstallation\n\n\n\nInstalliere zuerst R, dann RStudio auf deinem Computer. Die Dateien kannst du kostenlos hier herunterladen.\n\n\n\nRStudio Interface\n\nStandardmäßig ist RStudio in vier Bereiche (auch “Panes”) aufgeteilt:\n\nSource (oben links)\n\nHier schreibst und bearbeitest du deine Skripte oder Quarto-/RMarkdown-Dokumente. Du kannst deinen Code hier speichern und später erneut ausführen.\n\nConsole (unten links)\n\nIn diesem Bereich wird der Code tatsächlich ausgeführt. Du kannst hier auch direkt Befehle eingeben und die Ergebnisse sofort sehen.\n\nEnvironment / History (oben rechts)\n\nEnvironment zeigt dir alle Objekte (z. B. Daten, Funktionen, Variablen), die aktuell im Arbeitsspeicher liegen.\nHistory listet alle bisherigen Befehle auf, die du ausgeführt hast.\n\nFiles / Plots / Packages / Help / Viewer (unten rechts)\n\nDieser Bereich enthält mehrere Reiter:\n\nFiles: zeigt Dateien und Ordner im aktuellen Projektordner.\nPlots: zeigt Grafiken, die du mit R erzeugst.\nPackages: zeigt installierte R-Pakete an und ermöglicht deren Verwaltung.\nHelp: zeigt Hilfeseiten zu Funktionen und Paketen.\nViewer: zeigt z. B. interaktive HTML-Outputs aus Quarto an.\n\n\n\nDu kannst die Anordnung der Fenster bei Bedarf unter Tools &gt; Global Options &gt; Pane Layout anpassen.\n\n\n\n\n\n\nDesignoptionen\n\n\n\n\n\nStandardmäßig ist das Theme von RStudio hell. Wenn dir das zu langweilig ist, kannst du das Programm ganz einfach an deinen Geschmack anpassen: Unter Tools &gt; Global Options &gt; Appearance hast du die Möglichkeit, ein anderes Farbschema oder eine neue Schriftart auszuwählen.\nFür besonders ansprechende Symbole – etwa den Zuweisungspfeil “&lt;-” – empfiehlt sich die Schriftart Fira Code. Sie sorgt für eine übersichtlichere Darstellung und unterstützt sogenannte Ligaturen. Dafür ist eine vorherige Installation notwendig.\n\n\n\n\n\nSkripte und Befehle\nCode kannst du zwar auch direkt in der Konsole schreiben und ausführen, allerdings wird dieser dort nicht nach der Sitzung erhalten. Um dein Vorgehen für dich und andere replizierbar zu machen, empfiehlt es sich mit Skripten zu arbeiten. Bei einem Skript handelt es sich um eine Datei, in der du Code schreiben und diesen direkt ausführen kannst. Um ein neues Skript zu erstellen, wähle im Menü File &gt; New File &gt; R Script oder klicke alternativ auf das Blatt mit dem Plussymbol links oben und wähle dort “R Script” aus.\nDas leere Skript kannst du jetzt mit deinem Code füllen. Probier es doch gleich mal aus und schreibe eine einfache Rechnung in dein Skript:\n\n1 + 1\n\nDen Code kannst du jetzt direkt ausführen, indem du in die zugehörige Zeile klickst und Strg+EnterStrg+Enter drückst. Der ausgeführte Code und das Ergebnis erscheinen dann unten in der Konsole. Du kannst auch mehrere Befehle ausführen, indem du die Codezeilen markierst und dann Strg + Enter drückst. Du hast außerdem die Möglichkeit, oben rechts im Source-Pane mit einem Mausklick den markierten Code auszuführen.\nPro Tipp: STRg+Shift+Enter für das gesamte Skript",
    "crumbs": [
      "TUTORIALS",
      "Rste Schritte"
    ]
  },
  {
    "objectID": "tutorials/Rste-schritte.html#installation-von-r-und-rstudio",
    "href": "tutorials/Rste-schritte.html#installation-von-r-und-rstudio",
    "title": "Rste Schritte",
    "section": "Installation von R und RStudio",
    "text": "Installation von R und RStudio\n\n\n\n\n\n\nTitel\n\n\n\nDas ist ein Test.",
    "crumbs": [
      "Tutorials",
      "Rste Schritte"
    ]
  }
]